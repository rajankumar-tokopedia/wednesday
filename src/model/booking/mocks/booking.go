// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tokopedia/wednesday/src/model/booking (interfaces: Booking)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	booking "github.com/tokopedia/wednesday/src/model/booking"
	reflect "reflect"
)

// MockBooking is a mock of Booking interface
type MockBooking struct {
	ctrl     *gomock.Controller
	recorder *MockBookingMockRecorder
}

// MockBookingMockRecorder is the mock recorder for MockBooking
type MockBookingMockRecorder struct {
	mock *MockBooking
}

// NewMockBooking creates a new mock instance
func NewMockBooking(ctrl *gomock.Controller) *MockBooking {
	mock := &MockBooking{ctrl: ctrl}
	mock.recorder = &MockBookingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBooking) EXPECT() *MockBookingMockRecorder {
	return m.recorder
}

// GetLastNBookings mocks base method
func (m *MockBooking) GetLastNBookings(arg0 context.Context, arg1, arg2 int64) ([]booking.Info, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastNBookings", arg0, arg1, arg2)
	ret0, _ := ret[0].([]booking.Info)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLastNBookings indicates an expected call of GetLastNBookings
func (mr *MockBookingMockRecorder) GetLastNBookings(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastNBookings", reflect.TypeOf((*MockBooking)(nil).GetLastNBookings), arg0, arg1, arg2)
}
