// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tokopedia/wednesday/src/model/cab (interfaces: Cab)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	cab "github.com/tokopedia/wednesday/src/model/cab"
	reflect "reflect"
)

// MockCab is a mock of Cab interface
type MockCab struct {
	ctrl     *gomock.Controller
	recorder *MockCabMockRecorder
}

// MockCabMockRecorder is the mock recorder for MockCab
type MockCabMockRecorder struct {
	mock *MockCab
}

// NewMockCab creates a new mock instance
func NewMockCab(ctrl *gomock.Controller) *MockCab {
	mock := &MockCab{ctrl: ctrl}
	mock.recorder = &MockCabMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCab) EXPECT() *MockCabMockRecorder {
	return m.recorder
}

// NearBy mocks base method
func (m *MockCab) NearBy(arg0 context.Context, arg1, arg2 string) ([]cab.Info, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NearBy", arg0, arg1, arg2)
	ret0, _ := ret[0].([]cab.Info)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NearBy indicates an expected call of NearBy
func (mr *MockCabMockRecorder) NearBy(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NearBy", reflect.TypeOf((*MockCab)(nil).NearBy), arg0, arg1, arg2)
}
